%8 Queens solution problem. The object of this program is to place 
%the queens onto an 8*8 chessboard so queens will not bump into 
%each other vertically or horizontally. This is the solution to
%these problems.

%base case when queen is an empty set  
nQueens([]). 

%defines the whole board 
%nQueens([1/Column1, 2/Column2, 3/Column3, 4/Column5, 6/Column6, 7/Column7, 8/Column8]).
nQueens([Row/Column | Other]) :-
	%recurse through the board for different perumations	
	nQueens(Other), 
	%try to go through every possible combination to see if it is correct
	member(Column, [1,2,3,4,5,6,7,8]),
	%see if the possible combination is safe before selecting 
	checkToSeeSafe(Row / Column, Other).

%members will select the correct permutations
member(X,[X|_]).
member(X, [_|T]):- member(X, T).

%check to see if the queens are safe 
%if the set is empty, then the board is all safe 
checkToSeeSafe(X, []).
%Check to see if a piece can be placed there 
%Row1/Column1 references to the head of the program 
%Other represents the rest of the board 
checkToSeeSafe(Row/Column,[Row1/Column1|Other]):- 
	%Check if the peices are placed in the same diagonal
	%This checks for top right and top left in the diagonals 	
	Row-Row1 =\= Column1-Column,	
	Row1-Row =\= Column1-Column,	
	%Pieces are not placed in the same column	
	Column=\=Column1, 
	%Recurse until all of the board is tried out
	checkToSeeSafe(Row/Column, Other).

eightqueens(X) :- X = [1/_, 2/_, 3/_, 4/_, 5/_, 6/_, 7/_, 8/_], nQueens(X).
%template(L) :- findall(H|_, nQueens(L)). 
/**
Output::*******************

?- eightqueens(X).
X = [1/4, 2/2, 3/7, 4/3, 5/6, 6/8, 7/5, 8/1] ;
X = [1/5, 2/2, 3/4, 4/7, 5/3, 6/8, 7/6, 8/1] ;
X = [1/3, 2/5, 3/2, 4/8, 5/6, 6/4, 7/7, 8/1] ;
X = [1/3, 2/6, 3/4, 4/2, 5/8, 6/5, 7/7, 8/1] ;
X = [1/5, 2/7, 3/1, 4/3, 5/8, 6/6, 7/4, 8/2] ;
X = [1/4, 2/6, 3/8, 4/3, 5/1, 6/7, 7/5, 8/2] ;
X = [1/3, 2/6, 3/8, 4/1, 5/4, 6/7, 7/5, 8/2] ;
X = [1/5, 2/3, 3/8, 4/4, 5/7, 6/1, 7/6, 8/2] ;
X = [1/5, 2/7, 3/4, 4/1, 5/3, 6/8, 7/6, 8/2] ;
X = [1/4, 2/1, 3/5, 4/8, 5/6, 6/3, 7/7, 8/2] ;
X = [1/3, 2/6, 3/4, 4/1, 5/8, 6/5, 7/7, 8/2] ;
X = [1/4, 2/7, 3/5, 4/3, 5/1, 6/6, 7/8, 8/2] ;
X = [1/6, 2/4, 3/2, 4/8, 5/5, 6/7, 7/1, 8/3] ;
X = [1/6, 2/4, 3/7, 4/1, 5/8, 6/2, 7/5, 8/3] ;
X = [1/1, 2/7, 3/4, 4/6, 5/8, 6/2, 7/5, 8/3] ;
X = [1/6, 2/8, 3/2, 4/4, 5/1, 6/7, 7/5, 8/3] ;
X = [1/6, 2/2, 3/7, 4/1, 5/4, 6/8, 7/5, 8/3] ;
X = [1/4, 2/7, 3/1, 4/8, 5/5, 6/2, 7/6, 8/3] ;
X = [1/5, 2/8, 3/4, 4/1, 5/7, 6/2, 7/6, 8/3] ;
X = [1/4, 2/8, 3/1, 4/5, 5/7, 6/2, 7/6, 8/3] ;
X = [1/2, 2/7, 3/5, 4/8, 5/1, 6/4, 7/6, 8/3] ;
X = [1/1, 2/7, 3/5, 4/8, 5/2, 6/4, 7/6, 8/3] ;
X = [1/2, 2/5, 3/7, 4/4, 5/1, 6/8, 7/6, 8/3] ;
X = [1/4, 2/2, 3/7, 4/5, 5/1, 6/8, 7/6, 8/3] ;
X = [1/5, 2/7, 3/1, 4/4, 5/2, 6/8, 7/6, 8/3] ;
X = [1/6, 2/4, 3/1, 4/5, 5/8, 6/2, 7/7, 8/3] ;
X = [1/5, 2/1, 3/4, 4/6, 5/8, 6/2, 7/7, 8/3] ;
X = [1/5, 2/2, 3/6, 4/1, 5/7, 6/4, 7/8, 8/3] ;
X = [1/6, 2/3, 3/7, 4/2, 5/8, 6/5, 7/1, 8/4] ;
X = [1/2, 2/7, 3/3, 4/6, 5/8, 6/5, 7/1, 8/4] ;
X = [1/7, 2/3, 3/1, 4/6, 5/8, 6/5, 7/2, 8/4] ;
X = [1/5, 2/1, 3/8, 4/6, 5/3, 6/7, 7/2, 8/4] ;
X = [1/1, 2/5, 3/8, 4/6, 5/3, 6/7, 7/2, 8/4] ;
X = [1/3, 2/6, 3/8, 4/1, 5/5, 6/7, 7/2, 8/4] ;
X = [1/6, 2/3, 3/1, 4/7, 5/5, 6/8, 7/2, 8/4] ;
X = [1/7, 2/5, 3/3, 4/1, 5/6, 6/8, 7/2, 8/4] ;
X = [1/7, 2/3, 3/8, 4/2, 5/5, 6/1, 7/6, 8/4] ;
X = [1/5, 2/3, 3/1, 4/7, 5/2, 6/8, 7/6, 8/4] ;
X = [1/2, 2/5, 3/7, 4/1, 5/3, 6/8, 7/6, 8/4] ;
X = [1/3, 2/6, 3/2, 4/5, 5/8, 6/1, 7/7, 8/4] ;
X = [1/6, 2/1, 3/5, 4/2, 5/8, 6/3, 7/7, 8/4] ;
X = [1/8, 2/3, 3/1, 4/6, 5/2, 6/5, 7/7, 8/4] ;
X = [1/2, 2/8, 3/6, 4/1, 5/3, 6/5, 7/7, 8/4] ;
X = [1/5, 2/7, 3/2, 4/6, 5/3, 6/1, 7/8, 8/4] ;
X = [1/3, 2/6, 3/2, 4/7, 5/5, 6/1, 7/8, 8/4] ;
X = [1/6, 2/2, 3/7, 4/1, 5/3, 6/5, 7/8, 8/4] ;
X = [1/3, 2/7, 3/2, 4/8, 5/6, 6/4, 7/1, 8/5] ;
X = [1/6, 2/3, 3/7, 4/2, 5/4, 6/8, 7/1, 8/5] ;
X = [1/4, 2/2, 3/7, 4/3, 5/6, 6/8, 7/1, 8/5] ;
X = [1/7, 2/1, 3/3, 4/8, 5/6, 6/4, 7/2, 8/5] ;
X = [1/1, 2/6, 3/8, 4/3, 5/7, 6/4, 7/2, 8/5] ;
X = [1/3, 2/8, 3/4, 4/7, 5/1, 6/6, 7/2, 8/5] ;
X = [1/6, 2/3, 3/7, 4/4, 5/1, 6/8, 7/2, 8/5] ;
X = [1/7, 2/4, 3/2, 4/8, 5/6, 6/1, 7/3, 8/5] ;
X = [1/4, 2/6, 3/8, 4/2, 5/7, 6/1, 7/3, 8/5] ;
X = [1/2, 2/6, 3/1, 4/7, 5/4, 6/8, 7/3, 8/5] ;
X = [1/2, 2/4, 3/6, 4/8, 5/3, 6/1, 7/7, 8/5] ;
X = [1/3, 2/6, 3/8, 4/2, 5/4, 6/1, 7/7, 8/5] ;
X = [1/6, 2/3, 3/1, 4/8, 5/4, 6/2, 7/7, 8/5] ;
X = [1/8, 2/4, 3/1, 4/3, 5/6, 6/2, 7/7, 8/5] ;
X = [1/4, 2/8, 3/1, 4/3, 5/6, 6/2, 7/7, 8/5] ;
X = [1/2, 2/6, 3/8, 4/3, 5/1, 6/4, 7/7, 8/5] ;
X = [1/7, 2/2, 3/6, 4/3, 5/1, 6/4, 7/8, 8/5] ;
X = [1/3, 2/6, 3/2, 4/7, 5/1, 6/4, 7/8, 8/5] ;
X = [1/4, 2/7, 3/3, 4/8, 5/2, 6/5, 7/1, 8/6] ;
X = [1/4, 2/8, 3/5, 4/3, 5/1, 6/7, 7/2, 8/6] ;
X = [1/3, 2/5, 3/8, 4/4, 5/1, 6/7, 7/2, 8/6] ;
X = [1/4, 2/2, 3/8, 4/5, 5/7, 6/1, 7/3, 8/6] ;
X = [1/5, 2/7, 3/2, 4/4, 5/8, 6/1, 7/3, 8/6] ;
X = [1/7, 2/4, 3/2, 4/5, 5/8, 6/1, 7/3, 8/6] ;
X = [1/8, 2/2, 3/4, 4/1, 5/7, 6/5, 7/3, 8/6] ;
X = [1/7, 2/2, 3/4, 4/1, 5/8, 6/5, 7/3, 8/6] ;
X = [1/5, 2/1, 3/8, 4/4, 5/2, 6/7, 7/3, 8/6] ;
X = [1/4, 2/1, 3/5, 4/8, 5/2, 6/7, 7/3, 8/6] ;
X = [1/5, 2/2, 3/8, 4/1, 5/4, 6/7, 7/3, 8/6] ;
X = [1/3, 2/7, 3/2, 4/8, 5/5, 6/1, 7/4, 8/6] ;
X = [1/3, 2/1, 3/7, 4/5, 5/8, 6/2, 7/4, 8/6] ;
X = [1/8, 2/2, 3/5, 4/3, 5/1, 6/7, 7/4, 8/6] ;
X = [1/3, 2/5, 3/2, 4/8, 5/1, 6/7, 7/4, 8/6] ;
X = [1/3, 2/5, 3/7, 4/1, 5/4, 6/2, 7/8, 8/6] ;
X = [1/5, 2/2, 3/4, 4/6, 5/8, 6/3, 7/1, 8/7] ;
X = [1/6, 2/3, 3/5, 4/8, 5/1, 6/4, 7/2, 8/7] ;
X = [1/5, 2/8, 3/4, 4/1, 5/3, 6/6, 7/2, 8/7] ;
X = [1/4, 2/2, 3/5, 4/8, 5/6, 6/1, 7/3, 8/7] ;
X = [1/4, 2/6, 3/1, 4/5, 5/2, 6/8, 7/3, 8/7] ;
X = [1/6, 2/3, 3/1, 4/8, 5/5, 6/2, 7/4, 8/7] ;
X = [1/5, 2/3, 3/1, 4/6, 5/8, 6/2, 7/4, 8/7] ;
X = [1/4, 2/2, 3/8, 4/6, 5/1, 6/3, 7/5, 8/7] ;
X = [1/6, 2/3, 3/5, 4/7, 5/1, 6/4, 7/2, 8/8] ;
X = [1/6, 2/4, 3/7, 4/1, 5/3, 6/5, 7/2, 8/8] ;
X = [1/4, 2/7, 3/5, 4/2, 5/6, 6/1, 7/3, 8/8] ;
X = [1/5, 2/7, 3/2, 4/6, 5/3, 6/1, 7/4, 8/8] ;


*/
